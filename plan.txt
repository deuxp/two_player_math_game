== Players == noun --------------------------------------------------------
State:
---
1. name
2. score - private
3. lives

== Game == noun -----------------------------------------------------------
No state
verb1 - Engine -> Loop for the turns to occur
                  Check turn results at the beginning of each turn
                    if 0 game over

                            

== Turn == noun -----------------------------------------------------------
State:
---
1. guess
Asks the Math Question
            question(num1, num2) as params
                returns true or false
            
            analyze_result(result_player1, result_player2) - setState
                change state in Player => 
                    correct: give point |OR| incorrect: take lives

### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### 

The Players class will initalize a challenger. It will store information about 
the combatant. It will track their remaining lives. It will keep score for 
every correct answer.

The Game class will hold the data related to the game, specifically it will
track the guesses informed by each player. It will provide the loop for the
game to run, and declare a winner. Does not access the player data

behaviour of the game
change the state of the players lives